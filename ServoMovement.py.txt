class ServoMovement:
    def __init__(self, input_servo_connection):
        self.input_object = input_servo_connection

    def move_to(self, input_position):
        self.input_object.goto(1, SERVO_SETTING[input_position][1], speed=SERVO_SPEED, degrees=True)
        time.sleep(0.5)
        self.input_object.goto(4, SERVO_SETTING[input_position][4], speed=SERVO_SPEED, degrees=True)
        time.sleep(0.5)
        self.input_object.goto(2, SERVO_SETTING[input_position][2], speed=SERVO_SPEED, degrees=True)
        self.input_object.goto(3, SERVO_SETTING[input_position][3], speed=SERVO_SPEED, degrees=True)
        time.sleep(4)

    def pick_up(self):
        # time.sleep(1.5)
        self.input_object.goto(5, 85, speed=120, degrees=True)
        time.sleep(1)

    def place(self):
        # time.sleep(1.5)
        self.input_object.goto(5, 20, speed=120, degrees=True)
        time.sleep(1)

    def reset(self):
        self.input_object.goto(3, 0, speed=SERVO_SPEED, degrees=True)
        time.sleep(0.5)
        self.input_object.goto(2, 0, speed=SERVO_SPEED, degrees=True)
        self.input_object.goto(4, 0, speed=SERVO_SPEED, degrees=True)
        time.sleep(0.5)
        self.input_object.goto(1, 0, speed=SERVO_SPEED, degrees=True)
        time.sleep(4)

    def open_hand(self):
        serial_connection.goto(5, 20, speed=SERVO_SPEED, degrees=True)
        time.sleep(4)


def pick_and_place(initial_location, destination):
    servo_class.move_to(initial_location)
    servo_class.pick_up()
    servo_class.reset()
    servo_class.move_to(destination)
    servo_class.place()
    servo_class.reset()
